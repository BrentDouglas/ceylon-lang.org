// This import applies a global reset to any page that imports this stylesheet.
@import "blueprint/reset";

// To configure blueprint, edit the partials/base.sass file.
@import "partials/base";

// Import all the default blueprint modules so that we can access their mixins.
@import "blueprint";

// Import the non-default scaffolding module.
@import "blueprint/scaffolding";

@import "compass/utilities/lists";
@import "compass/utilities/links/link-colors";

// To generate css equivalent to the blueprint css but with your
// configuration applied, uncomment:
// @include blueprint

// But Compass recommends that you scope your blueprint styles
// So that you can better control what pages use blueprint
// when stylesheets are concatenated together.
@include blueprint-scaffolding("body.bp");

body.bp {
  @include blueprint-typography(true);
  @include blueprint-utilities;
  @include blueprint-debug;
  @include blueprint-interaction;
  // Remove the scaffolding when you're ready to start doing visual design.
  // Or leave it in if you're happy with how blueprint looks out-of-the-box
  font-size: inherit;
}

form.bp {
  @include blueprint-form; }

// Various header style
.header-bar {
  // see http://www.colorzilla.com/gradient-editor/
  background: $header_color; /* Old browsers */
  background: -moz-linear-gradient(top, $menu_selected_color 0%, $header_color 100%); /* FF3.6+ */
  background: -o-linear-gradient(top, $menu_selected_color 0%,$header_color 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, $menu_selected_color 0%,$header_color 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$menu_selected_color', endColorstr='$header_color',GradientType=0 ); /* IE6-9 */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$menu_selected_color), color-stop(100%,$header_color)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, $menu_selected_color 0%,$header_color 100%); /* Chrome10+,Safari5.1+ */
  background: linear-gradient(top, $menu_selected_color 0%,$header_color 100%); /* W3C */
  border-bottom-width:3px;
  border-bottom-style:solid;
  border-bottom-color:$menu_selected_color;
  -webkit-box-shadow: -0px 2px 3px 0px gray;
  -moz-box-shadow: -0px 2px 3px 0px gray;
  box-shadow: -0px 2px 3px 0px gray;
}

#header {
  background: url("../images/ceylon-logo.png") no-repeat 0px 20px;
  height: 141px;
  padding-left: 120px;
  margin-left: 30px;
  overflow:hidden;
  #header-logo {
    display:block;
    //margin-left:10em;
    h1 {
      font-size:40pt;
      font-weight: bold;
      color:$ceylon_logo_color;
      margin: 0;
      line-height: inherit;
      text-shadow: 1px 1px 1px white;
      filter: dropshadow(color=white, offx=1, offy=1);
    }
  }
  #header-tagline {
    text-align:left;
    vertical-align:bottom;
    display:block;
    font-style: italic;
    margin-left: 100px;
    margin-top: -10px;
  }
  #menu {
    #menu-core {
      color:#ffffff;
      font-size:110%;
      padding:0;
      margin:0;
      height:2em;
      list-style-type:none;
      border-left:1px solid $header_color;
      li:hover {
        background-color:$menu_hovered_color;
        cursor:pointer;
      }
      li#selected {
        background-color:$menu_selected_color;
      }  
      li {
        background-color:$menu_color;
        text-align:center;
        min-width:10%; 
        height:2em;
        line-height:2em;
        position:relative;
        text-align:center;
        display: inline-block;
        padding: 0 4px;
      }
      a {
        display:block;
        color: white;
        font-weight: bold;
        text-decoration: none;
        text-align:center;
      }
      li#selected a,
      li:hover a {
        color: black;
      }
      
    }
  }
}

// primary content style
#primary-content {
  position:relative;
  top:2em;
  @include container;
  #core-page {
      @include column(16);
  }
  #sidebar {
      @include column(8,true);
      
      #release {
        h3 {
          color:#000000;
        }
        padding:1em;
        margin:1em;
        background-color:$header_color;
      }
      #twitter {
        h3 {
          color:#000000;
        }
        padding:1em;
        margin:1em;
        margin-top:2em;
        background-color:$header_color;
      }
  }
}

// Footer style
.footer-bar {
  background-color:$header_color;
  border-top-width:3px;
  border-top-style:solid;
  border-top-color:$menu_selected_color;
  position:relative;
  top:5em;
  clear:both;
}
#footer {
  @include container;
  background-color:$header_color;
  overflow:hidden;
  #footer-core {
    display:block;
    #dev {
      @include column(24, true);
    }
    #todo {
      @include column(24, true);
      display:inline;
      background-color:#FFE4C4;
      //opacity:0.4;
      padding:.5em;
      color:#000000;
      #todo-left {
        display:inline;
        float:left;
        width:40%;
      }
      #todo-right{
        display:inline;
        float:right;
        width:40%;
      }
    }
    #copyright {
      padding-top:2em;
      @include column(24, true);
      text-align:center;
    }  
  }
}

//NOT USED is it?
// Page layout can be done using mixins applied to your semantic classes and IDs:
body.two-col {
  #container {
    @include container; }
  #header, #footer {
    @include column($blueprint-grid-columns); }
  #sidebar {
    // One third of the grid columns, rounding down. With 24 cols, this is 8.
    $sidebar-columns: floor($blueprint-grid-columns / 3);
    @include column($sidebar-columns); }
  #content {
    // Two thirds of the grid columns, rounding up.
    // With 24 cols, this is 16.
    $content-columns: ceil(2 * $blueprint-grid-columns / 3);
    // true means it's the last column in the row
    @include column($content-columns, true); } }
